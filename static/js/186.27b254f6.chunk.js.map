{"version":3,"file":"static/js/186.27b254f6.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEQC,EAAAA,EAAAA,IAAgBP,GAFxB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACN,KAGF,gCACsB,IAAnBG,EAAQQ,SACP,0BACE,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBb,EAAQQ,SACP,wEAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../services/API';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const getReviews = await getMovieReviews(movieId);\n        setReviews(getReviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getMovieReviews","getReviews","console","log","length","map","review","author","content","id"],"sourceRoot":""}