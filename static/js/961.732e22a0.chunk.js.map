{"version":3,"file":"static/js/961.732e22a0.chunk.js","mappings":"iOA0EA,UAtEqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,qBADHC,EAAAA,EAAAA,MACeC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc/C,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBX,GAFrB,OAEXY,EAFW,OAGjBR,EAAaQ,GAHI,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACV,IAECG,EAIL,OACE,iCACE,SAAC,KAAD,CAAMY,GAAIV,EAAV,UACE,mBAAQW,KAAK,SAASC,UAAU,SAAhC,uBAIDd,IACC,4BACE,gBACEe,IAAK,kCAAoCf,EAAUgB,YACnDC,IAAKjB,EAAUkB,eACfC,MAAM,WAER,4BACE,wBAAKnB,EAAUoB,SACf,yCAA0C,GAAzBpB,EAAUqB,cAAmBC,QAAQ,GAAtD,QACA,sCACA,iCAAOtB,EAAUuB,aACjB,oCACA,wBACGvB,EAAUwB,OAAOC,KAAI,SAAAC,GAAK,OACzB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADU,aAOnC,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,mBACA,SAAC,EAAAiB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAKT,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet, Link } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const location = useLocation();\n  const goBackLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieInfo(details);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  return (\n    <>\n      <Link to={goBackLinkHref}>\n        <button type=\"button\" className=\"Button\">\n          Go back\n        </button>\n      </Link>\n      {movieInfo && (\n        <div>\n          <img\n            src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n            alt={movieInfo.original_title}\n            width=\"300px\"\n          />\n          <div>\n            <h1>{movieInfo.title}</h1>\n            <p>User score: {(movieInfo.vote_average * 10).toFixed(2)}%</p>\n            <h2>Overview</h2>\n            <p>{`${movieInfo.overview}`}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movieInfo.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movieInfo","setMovieInfo","goBackLinkHref","useLocation","state","from","useEffect","fetchDetails","getMovieDetails","details","console","log","to","type","className","src","poster_path","alt","original_title","width","title","vote_average","toFixed","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}